### YamlMime:ManagedReference
items:
- uid: HuajiTech.CoolQ.Extensions
  commentId: T:HuajiTech.CoolQ.Extensions
  id: Extensions
  parent: HuajiTech.CoolQ
  children:
  - HuajiTech.CoolQ.Extensions.RegexDecode(HuajiTech.QQ.Message)
  langs:
  - csharp
  - vb
  name: Extensions
  nameWithType: Extensions
  fullName: HuajiTech.CoolQ.Extensions
  type: Class
  source:
    remote:
      path: src/HuajiTech.CoolQ/Extensions.cs
      branch: master
      repo: https://github.com/huajitech/coolq-dotnet-sdk.git
    id: Extensions
    path: src/HuajiTech.CoolQ/Extensions.cs
    startLine: 10
  assemblies:
  - HuajiTech.CoolQ
  namespace: HuajiTech.CoolQ
  summary: "\n定义扩展方法。\n"
  example: []
  syntax:
    content: 'public static class Extensions : object'
    content.vb: >-
      Public Module Extensions

          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: HuajiTech.CoolQ.Extensions.RegexDecode(HuajiTech.QQ.Message)
  commentId: M:HuajiTech.CoolQ.Extensions.RegexDecode(HuajiTech.QQ.Message)
  id: RegexDecode(HuajiTech.QQ.Message)
  isExtensionMethod: true
  parent: HuajiTech.CoolQ.Extensions
  langs:
  - csharp
  - vb
  name: RegexDecode(Message)
  nameWithType: Extensions.RegexDecode(Message)
  fullName: HuajiTech.CoolQ.Extensions.RegexDecode(HuajiTech.QQ.Message)
  type: Method
  source:
    remote:
      path: src/HuajiTech.CoolQ/Extensions.cs
      branch: master
      repo: https://github.com/huajitech/coolq-dotnet-sdk.git
    id: RegexDecode
    path: src/HuajiTech.CoolQ/Extensions.cs
    startLine: 18
  assemblies:
  - HuajiTech.CoolQ
  namespace: HuajiTech.CoolQ
  summary: "\n将 <xref href=\"HuajiTech.QQ.Message.Content\" data-throw-if-not-resolved=\"false\"></xref> 为编码后的正则消息匹配结果的 <xref href=\"HuajiTech.QQ.Message\" data-throw-if-not-resolved=\"false\"></xref> 对象解码为只读字典。\n"
  example: []
  syntax:
    content: public static IReadOnlyDictionary<string, string> RegexDecode(this Message message)
    parameters:
    - id: message
      type: HuajiTech.QQ.Message
      description: 要解析为只读字典的 <xref href="HuajiTech.CoolQ.Message" data-throw-if-not-resolved="false"></xref> 对象。
    return:
      type: IReadOnlyDictionary{System.String,System.String}
      description: 与 <xref href="HuajiTech.QQ.Message.Content" data-throw-if-not-resolved="false"></xref> 等效的只读字典。
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RegexDecode(message As Message) As IReadOnlyDictionary(Of String, String)
  overload: HuajiTech.CoolQ.Extensions.RegexDecode*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: HuajiTech.CoolQ
  commentId: N:HuajiTech.CoolQ
  name: HuajiTech.CoolQ
  nameWithType: HuajiTech.CoolQ
  fullName: HuajiTech.CoolQ
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: HuajiTech.QQ.Message.Content
  commentId: P:HuajiTech.QQ.Message.Content
  isExternal: true
- uid: HuajiTech.QQ.Message
  commentId: T:HuajiTech.QQ.Message
  parent: HuajiTech.QQ
  name: Message
  nameWithType: Message
  fullName: HuajiTech.QQ.Message
- uid: HuajiTech.CoolQ.Message
  commentId: T:HuajiTech.CoolQ.Message
  isExternal: true
- uid: HuajiTech.CoolQ.Extensions.RegexDecode*
  commentId: Overload:HuajiTech.CoolQ.Extensions.RegexDecode
  name: RegexDecode
  nameWithType: Extensions.RegexDecode
  fullName: HuajiTech.CoolQ.Extensions.RegexDecode
- uid: IReadOnlyDictionary{System.String,System.String}
  commentId: '!:IReadOnlyDictionary{System.String,System.String}'
  definition: IReadOnlyDictionary`2
  name: IReadOnlyDictionary<String, String>
  nameWithType: IReadOnlyDictionary<String, String>
  fullName: IReadOnlyDictionary<System.String, System.String>
  nameWithType.vb: IReadOnlyDictionary(Of String, String)
  fullName.vb: IReadOnlyDictionary(Of System.String, System.String)
  name.vb: IReadOnlyDictionary(Of String, String)
  spec.csharp:
  - uid: IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: HuajiTech.QQ
  commentId: N:HuajiTech.QQ
  name: HuajiTech.QQ
  nameWithType: HuajiTech.QQ
  fullName: HuajiTech.QQ
- uid: IReadOnlyDictionary`2
  commentId: '!:IReadOnlyDictionary`2'
  isExternal: true
  name: IReadOnlyDictionary<, >
  nameWithType: IReadOnlyDictionary<, >
  fullName: IReadOnlyDictionary<, >
  nameWithType.vb: IReadOnlyDictionary(Of , )
  fullName.vb: IReadOnlyDictionary(Of , )
  name.vb: IReadOnlyDictionary(Of , )
  spec.csharp:
  - uid: IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
