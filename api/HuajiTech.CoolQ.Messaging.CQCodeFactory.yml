### YamlMime:ManagedReference
items:
- uid: HuajiTech.CoolQ.Messaging.CQCodeFactory
  commentId: T:HuajiTech.CoolQ.Messaging.CQCodeFactory
  id: CQCodeFactory
  parent: HuajiTech.CoolQ.Messaging
  children:
  - HuajiTech.CoolQ.Messaging.CQCodeFactory.Create(System.String)
  - HuajiTech.CoolQ.Messaging.CQCodeFactory.Create(System.String,IDictionary{System.String,System.String})
  langs:
  - csharp
  - vb
  name: CQCodeFactory
  nameWithType: CQCodeFactory
  fullName: HuajiTech.CoolQ.Messaging.CQCodeFactory
  type: Class
  source:
    remote:
      path: src/HuajiTech.CoolQ/Messaging/CQCodeFactory.cs
      branch: master
      repo: https://github.com/huajitech/coolq-dotnet-sdk.git
    id: CQCodeFactory
    path: src/HuajiTech.CoolQ/Messaging/CQCodeFactory.cs
    startLine: 8
  assemblies:
  - HuajiTech.CoolQ
  namespace: HuajiTech.CoolQ.Messaging
  summary: "\n提供用于创建 <xref href=\"HuajiTech.CoolQ.Messaging.CQCode\" data-throw-if-not-resolved=\"false\"></xref> 对象的方法的静态类。\n"
  example: []
  syntax:
    content: 'public static class CQCodeFactory : object'
    content.vb: >-
      Public Module CQCodeFactory

          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: HuajiTech.CoolQ.Messaging.CQCodeFactory.Create(System.String,IDictionary{System.String,System.String})
  commentId: M:HuajiTech.CoolQ.Messaging.CQCodeFactory.Create(System.String,IDictionary{System.String,System.String})
  id: Create(System.String,IDictionary{System.String,System.String})
  parent: HuajiTech.CoolQ.Messaging.CQCodeFactory
  langs:
  - csharp
  - vb
  name: Create(String, IDictionary<String, String>)
  nameWithType: CQCodeFactory.Create(String, IDictionary<String, String>)
  fullName: HuajiTech.CoolQ.Messaging.CQCodeFactory.Create(System.String, IDictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: src/HuajiTech.CoolQ/Messaging/CQCodeFactory.cs
      branch: master
      repo: https://github.com/huajitech/coolq-dotnet-sdk.git
    id: Create
    path: src/HuajiTech.CoolQ/Messaging/CQCodeFactory.cs
    startLine: 18
  assemblies:
  - HuajiTech.CoolQ
  namespace: HuajiTech.CoolQ.Messaging
  summary: "\n以指定的类型和参数创建一个 <xref href=\"HuajiTech.CoolQ.Messaging.CQCode\" data-throw-if-not-resolved=\"false\"></xref> 类的新实例。\n"
  example: []
  syntax:
    content: public static CQCode Create(string type, IDictionary<string, string> parameters)
    parameters:
    - id: type
      type: System.String
      description: 要创建的 <xref href="HuajiTech.CoolQ.Messaging.CQCode" data-throw-if-not-resolved="false"></xref> 对象的类型。
    - id: parameters
      type: IDictionary{System.String,System.String}
      description: 要创建的 <xref href="HuajiTech.CoolQ.Messaging.CQCode" data-throw-if-not-resolved="false"></xref> 对象的参数。
    return:
      type: HuajiTech.CoolQ.Messaging.CQCode
      description: 一个 <xref href="HuajiTech.CoolQ.Messaging.CQCode" data-throw-if-not-resolved="false"></xref> 类的新实例。
    content.vb: Public Shared Function Create(type As String, parameters As IDictionary(Of String, String)) As CQCode
  overload: HuajiTech.CoolQ.Messaging.CQCodeFactory.Create*
  nameWithType.vb: CQCodeFactory.Create(String, IDictionary(Of String, String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: HuajiTech.CoolQ.Messaging.CQCodeFactory.Create(System.String, IDictionary(Of System.String, System.String))
  name.vb: Create(String, IDictionary(Of String, String))
- uid: HuajiTech.CoolQ.Messaging.CQCodeFactory.Create(System.String)
  commentId: M:HuajiTech.CoolQ.Messaging.CQCodeFactory.Create(System.String)
  id: Create(System.String)
  parent: HuajiTech.CoolQ.Messaging.CQCodeFactory
  langs:
  - csharp
  - vb
  name: Create(String)
  nameWithType: CQCodeFactory.Create(String)
  fullName: HuajiTech.CoolQ.Messaging.CQCodeFactory.Create(System.String)
  type: Method
  source:
    remote:
      path: src/HuajiTech.CoolQ/Messaging/CQCodeFactory.cs
      branch: master
      repo: https://github.com/huajitech/coolq-dotnet-sdk.git
    id: Create
    path: src/HuajiTech.CoolQ/Messaging/CQCodeFactory.cs
    startLine: 61
  assemblies:
  - HuajiTech.CoolQ
  namespace: HuajiTech.CoolQ.Messaging
  summary: "\n以指定的类型创建一个 <xref href=\"HuajiTech.CoolQ.Messaging.CQCode\" data-throw-if-not-resolved=\"false\"></xref> 类的新实例。\n"
  example: []
  syntax:
    content: public static CQCode Create(string type)
    parameters:
    - id: type
      type: System.String
      description: 要创建的 <xref href="HuajiTech.CoolQ.Messaging.CQCode" data-throw-if-not-resolved="false"></xref> 对象的类型。
    return:
      type: HuajiTech.CoolQ.Messaging.CQCode
      description: 一个 <xref href="HuajiTech.CoolQ.Messaging.CQCode" data-throw-if-not-resolved="false"></xref> 类的新实例。
    content.vb: Public Shared Function Create(type As String) As CQCode
  overload: HuajiTech.CoolQ.Messaging.CQCodeFactory.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: HuajiTech.CoolQ.Messaging.CQCode
  commentId: T:HuajiTech.CoolQ.Messaging.CQCode
  parent: HuajiTech.CoolQ.Messaging
  name: CQCode
  nameWithType: CQCode
  fullName: HuajiTech.CoolQ.Messaging.CQCode
- uid: HuajiTech.CoolQ.Messaging
  commentId: N:HuajiTech.CoolQ.Messaging
  name: HuajiTech.CoolQ.Messaging
  nameWithType: HuajiTech.CoolQ.Messaging
  fullName: HuajiTech.CoolQ.Messaging
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: HuajiTech.CoolQ.Messaging.CQCodeFactory.Create*
  commentId: Overload:HuajiTech.CoolQ.Messaging.CQCodeFactory.Create
  name: Create
  nameWithType: CQCodeFactory.Create
  fullName: HuajiTech.CoolQ.Messaging.CQCodeFactory.Create
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: IDictionary{System.String,System.String}
  commentId: '!:IDictionary{System.String,System.String}'
  definition: IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IDictionary`2
  isExternal: true
  name: IDictionary<, >
  nameWithType: IDictionary<, >
  fullName: IDictionary<, >
  nameWithType.vb: IDictionary(Of , )
  fullName.vb: IDictionary(Of , )
  name.vb: IDictionary(Of , )
  spec.csharp:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
